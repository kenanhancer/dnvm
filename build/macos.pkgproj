<Project>
  <Import Project="..\Directory.Build.props" />
  <Import Project="git.targets" />

  <PropertyGroup>
    <Configuration>Release</Configuration>
    <ArtifactsDir>$(MSBuildThisFileDirectory)..\artifacts\</ArtifactsDir>
    <TargetDir>$(ArtifactsDir)build\</TargetDir>
    <PublishDir>$(ArtifactsDir)$(Configuration)\</PublishDir>
    <Version>$(VersionPrefix)</Version>
    <Version Condition="'$(VersionSuffix)' != ''">$(Version)-$(VersionSuffix)</Version>
    <RuntimeIdentifier>osx-x64</RuntimeIdentifier>
    <PackageFile>$(TargetDir)dnvm.$(RuntimeIdentifier).$(Version).tar.gz</PackageFile>
  </PropertyGroup>

  <ItemGroup>
    <SourceProjects Include="..\src\*\*.*proj" />
    <TestProjects Include="..\test\*\*.Tests.csproj" />
    <TestProjects Include="..\test\*\*.FunctionalTests.csproj" />
    <Projects Include="@(SourceProjects);@(TestProjects)" />
    <Content Include="..\packaging\README.md" PackagePath="%(FileName)%(Extension)" />
  </ItemGroup>

  <Target Name="Build" DependsOnTargets="Compile;Pack" />

  <Target Name="Restore">
    <MSBuild Projects="..\dnvm.sln" Targets="Restore" />
  </Target>

  <Target Name="Compile">
    <MSBuild Projects="..\dnvm.sln" Targets="Build" Properties="Configuration=$(Configuration)"/>
  </Target>

  <Target Name="VSTest">
    <MSBuild Projects="@(TestProjects)"
             Targets="VSTest"
             Properties="Configuration=$(Configuration);VSTestNoBuild=true" />
  </Target>

  <Target Name="CleanArtifacts">
    <RemoveDir Directories="$(PublishDir);$(TargetDir);" />
  </Target>

  <Target Name="Pack" DependsOnTargets="CleanArtifacts;ResolveCommitHash">
    <MakeDir Directories="$(ArtifactsDir);$(PublishDir)bin\;$(TargetDir);" />
    <MSBuild Targets="Publish"
             Projects="@(SourceProjects)"
              Properties="Configuration=$(Configuration);PublishDir=$(PublishDir)libexec\;NoBuild=true" />
    <WriteLinesToFile File="$(PublishDir)version" Lines="$(CommitHash);$(Version)" />

    <Exec Command="ln -s ../libexec/dotnet ./dotnet"
          WorkingDirectory="$(PublishDir)bin\" />
    <Exec Command="ln -s ../libexec/dnvm ./dnvm"
          WorkingDirectory="$(PublishDir)bin\" />
    <Exec Command="ln -s ../libexec/dnvm-prompt ./dnvm-prompt"
          WorkingDirectory="$(PublishDir)bin\" />
    <Copy SourceFiles="%(Content.FullPath)" DestinationFiles="$(PublishDir)%(Content.PackagePath)" />

    <Exec Command="tar -zcf &quot;$(PackageFile)&quot; ."
          WorkingDirectory="$(PublishDir)"/>
    <Exec Command="du -hd 0 &quot;$(PublishDir)&quot; | awk '{print &quot;Uncompressed&quot;, $1}'" />
    <Exec Command="ls -S -lh | grep dnvm.* | awk '{print &quot;Compressed&quot;, $9, $5}'"
          WorkingDirectory="$(TargetDir)" />
    <Exec Command="shasum -a 256 $(PackageFile) "/>
    <Message Importance="high" Text="Created $(PackageFile)" />

  </Target>

</Project>
